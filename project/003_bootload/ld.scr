/* Linker script, for H8/3052 on AKI-LAN target */
/* OUTPUT_FORMAT("coff-h8300") */
OUTPUT_ARCH(h8300h)
ENTRY("_start")
MEMORY
{
	/* 0xc4 is a magic entry.  We should have the linker just
	   skip over it one day...  */
	/* vectors : o = 0x0000, l = 0xc4 */
	/* magicvectors : o = 0xc4, l = 0x3c */

    romall(rx)   : o = 0x000000, l = 0x80000 /* 512KB */
	vectors(r)   : o = 0x000000, l = 0x100
    rom(rx)      : o = 0x000100, l = 0x7ff00 /* Internal ROM area */
    
    ramall(rxw)  : o = 0xffdf10, l = 0x2000  /* 8KB */
    data(rwx)    : o = 0xffe210, l = 0x0300  /* 768B */
    stack(rw)    : o = 0xffdf10, l = 0x2000
    /* The stack starts at the top of internal ram.  */
    topstack(rw) : o = 0xffff0c, l = 0x4

    /* External RAM area (128KB on CS1) */
    sramall(rwx) : o = 0x220000, l = 0x20000


	/* This holds variables in the "tiny" sections.  */
	tiny(rw)   : o = 0xff8000, l = 0x7f00
	/* At the very top of the address space is the 8-bit area.  */
	eight(rw)  : o = 0xffff00, l = 0x100
}
SECTIONS
{

    .vectors :
	{
	      /* Use something like this to place a specific
	         function's address into the vector table.
	         LONG (ABSOLUTE (_foobar)).  */
	      /* *(.vectors) */      
	    vector.o(.data)
    }  > vectors
	
    .text :
	{
        _text_start = . ;
	    *(.text)
        . = ALIGN(2) ;
   	    _text_end = . ;
	}  > rom
	
	.rodata :
	{
		_rodata_start = . ;
		*(.strings)
		*(.rodata)
		*(.rodata.*)
		. = ALIGN(2) ;
		_rodata_end = . ;
	} > rom 
	
    .data :
	{
        _data_start = . ;
	    *(.data)
        . = ALIGN(2) ;
	    _data_end = . ;
	}  > data AT> rom
	
    .bss :
	{
	    _bss_start = . ;
	    *(.bss)
	    *(COMMON)
        . = ALIGN(2) ;
	    _bss_end = . ;
	}  > data AT> rom
	
	. = ALIGN(4);
	_end = . ;
	
    .stack :
	{
	   _stack = . ;
	  *(.stack)
	}  > topstack
	
    .tiny :
	{
	  *(.tiny)
	}  > tiny
    .eight :
	{
	  *(.eight)
	}  > eight
    .stab 0 (NOLOAD) :
	{
	  [ .stab ]
	}
    .stabstr 0 (NOLOAD) :
	{
	  [ .stabstr ]
	}
}

